/*=============================================================================
#  Author:          Teerapat Jenrungrot - https://github.com/mjenrungrot/
#  FileName:        11201.cpp
#  Description:     UVa Online Judge - 11201
=============================================================================*/
#include <cmath>
#include <cstdio>
#include <cstring>
#include <string>
using namespace std;

const double EPS = 1e-9;
const int MAXLV = 7;
const double P[] = {12.53, 1.42, 4.68, 5.86, 13.68, 0.69, 1.01, 0.70, 6.25,
                    0.44,  0.00, 4.97, 3.15, 6.71,  8.68, 2.51, 0.88, 6.87,
                    7.98,  4.63, 3.93, 0.90, 0.02,  0.22, 0.90, 0.5};
const char *tt1 = "aeiou";
const char *tt2 = "bcdfghjklmnpqrstvwxyz";

char str[10];

int freq[30];
double sum[10][30];
int cc[10][30];

double f(string S) {
    double ans = 0.0;
    for (int i = 0; i < (int)S.length(); i++)
        ans += (double)(i + 1) * P[S[i] - 'a'];
    return ans;
}

int T;
void precal(int n) {
    if (n > 0) {
        str[n] = 0;
        sum[n][str[0] - 'a'] += f(str);
        cc[n][str[0] - 'a']++;
    }
    if (n == MAXLV) return;

    if (n % 2 == 0) {
        for (int i = 0; tt2[i]; i++) {
            if (freq[tt2[i]] == 2) continue;
            freq[tt2[i]]++;
            str[n] = tt2[i];
            precal(n + 1);
            freq[tt2[i]]--;
        }
    } else {
        for (int i = 0; tt1[i]; i++) {
            if (freq[tt1[i]] == 2) continue;
            str[n] = tt1[i];
            freq[tt1[i]]++;
            precal(n + 1);
            freq[tt1[i]]--;
        }
    }
}

int main() {
    // freopen("in","r",stdin);
    // precal(0);
    // for(int i=1;i<=MAXLV;i++) for(int j=0;j<26;j++){
    // 	if(cc[i][j] == 0) continue;
    // 	printf("sum[%d][%d] = %lf;\n",i,j,sum[i][j]/(double)cc[i][j]);
    // }
    sum[1][1] = 1.420000;
    sum[1][2] = 4.680000;
    sum[1][3] = 5.860000;
    sum[1][5] = 0.690000;
    sum[1][6] = 1.010000;
    sum[1][7] = 0.700000;
    sum[1][9] = 0.440000;
    sum[1][10] = 0.000000;
    sum[1][11] = 4.970000;
    sum[1][12] = 3.150000;
    sum[1][13] = 6.710000;
    sum[1][15] = 2.510000;
    sum[1][16] = 0.880000;
    sum[1][17] = 6.870000;
    sum[1][18] = 7.980000;
    sum[1][19] = 4.630000;
    sum[1][21] = 0.900000;
    sum[1][22] = 0.020000;
    sum[1][23] = 0.220000;
    sum[1][24] = 0.900000;
    sum[1][25] = 0.500000;
    sum[2][1] = 19.448000;
    sum[2][2] = 22.708000;
    sum[2][3] = 23.888000;
    sum[2][5] = 18.718000;
    sum[2][6] = 19.038000;
    sum[2][7] = 18.728000;
    sum[2][9] = 18.468000;
    sum[2][10] = 18.028000;
    sum[2][11] = 22.998000;
    sum[2][12] = 21.178000;
    sum[2][13] = 24.738000;
    sum[2][15] = 20.538000;
    sum[2][16] = 18.908000;
    sum[2][17] = 24.898000;
    sum[2][18] = 26.008000;
    sum[2][19] = 22.658000;
    sum[2][21] = 18.928000;
    sum[2][22] = 18.048000;
    sum[2][23] = 18.248000;
    sum[2][24] = 18.928000;
    sum[2][25] = 18.528000;
    sum[3][1] = 27.310857;
    sum[3][2] = 30.570857;
    sum[3][3] = 31.750857;
    sum[3][5] = 26.580857;
    sum[3][6] = 26.900857;
    sum[3][7] = 26.590857;
    sum[3][9] = 26.330857;
    sum[3][10] = 25.890857;
    sum[3][11] = 30.860857;
    sum[3][12] = 29.040857;
    sum[3][13] = 32.600857;
    sum[3][15] = 28.400857;
    sum[3][16] = 26.770857;
    sum[3][17] = 32.760857;
    sum[3][18] = 33.870857;
    sum[3][19] = 30.520857;
    sum[3][21] = 26.790857;
    sum[3][22] = 25.910857;
    sum[3][23] = 26.110857;
    sum[3][24] = 26.790857;
    sum[3][25] = 26.390857;
    sum[4][1] = 63.366857;
    sum[4][2] = 66.626857;
    sum[4][3] = 67.806857;
    sum[4][5] = 62.636857;
    sum[4][6] = 62.956857;
    sum[4][7] = 62.646857;
    sum[4][9] = 62.386857;
    sum[4][10] = 61.946857;
    sum[4][11] = 66.916857;
    sum[4][12] = 65.096857;
    sum[4][13] = 68.656857;
    sum[4][15] = 64.456857;
    sum[4][16] = 62.826857;
    sum[4][17] = 68.816857;
    sum[4][18] = 69.926857;
    sum[4][19] = 66.576857;
    sum[4][21] = 62.846857;
    sum[4][22] = 61.966857;
    sum[4][23] = 62.166857;
    sum[4][24] = 62.846857;
    sum[4][25] = 62.446857;
    sum[5][1] = 76.493455;
    sum[5][2] = 79.694182;
    sum[5][3] = 80.852727;
    sum[5][5] = 75.741619;
    sum[5][6] = 76.061619;
    sum[5][7] = 75.751619;
    sum[5][9] = 75.491619;
    sum[5][10] = 75.051619;
    sum[5][11] = 79.978909;
    sum[5][12] = 78.192000;
    sum[5][13] = 81.761619;
    sum[5][15] = 77.563636;
    sum[5][16] = 75.963273;
    sum[5][17] = 81.921619;
    sum[5][18] = 83.031619;
    sum[5][19] = 79.681619;
    sum[5][21] = 75.951619;
    sum[5][22] = 75.071619;
    sum[5][23] = 75.315273;
    sum[5][24] = 75.982909;
    sum[5][25] = 75.551619;
    sum[6][1] = 130.577455;
    sum[6][2] = 134.126876;
    sum[6][3] = 135.285421;
    sum[6][5] = 130.174313;
    sum[6][6] = 130.219586;
    sum[6][7] = 129.909586;
    sum[6][9] = 129.616400;
    sum[6][10] = 129.176400;
    sum[6][11] = 134.103690;
    sum[6][12] = 131.824452;
    sum[6][13] = 135.394071;
    sum[6][15] = 131.196088;
    sum[6][16] = 129.595724;
    sum[6][17] = 135.554071;
    sum[6][18] = 136.664071;
    sum[6][19] = 133.314071;
    sum[6][21] = 129.584071;
    sum[6][22] = 128.704071;
    sum[6][23] = 128.947724;
    sum[6][24] = 129.615361;
    sum[6][25] = 129.184071;
    sum[7][1] = 148.978817;
    sum[7][2] = 152.379766;
    sum[7][3] = 153.486017;
    sum[7][5] = 148.516625;
    sum[7][6] = 148.558782;
    sum[7][7] = 148.240994;
    sum[7][9] = 147.954441;
    sum[7][10] = 147.514441;
    sum[7][11] = 152.350538;
    sum[7][12] = 150.157345;
    sum[7][13] = 153.743943;
    sum[7][15] = 149.547563;
    sum[7][16] = 148.021278;
    sum[7][17] = 153.900505;
    sum[7][18] = 155.010505;
    sum[7][19] = 151.660505;
    sum[7][21] = 147.930505;
    sum[7][22] = 147.050505;
    sum[7][23] = 147.403272;
    sum[7][24] = 148.040005;
    sum[7][25] = 147.530505;

    scanf("%d", &T);
    while (T--) {
        scanf("%s", str);
        double val = f(str);
        double target = sum[strlen(str)][str[0] - 'a'];
        // printf("%lf %lf\n",val,target);
        if (val > target or fabs(val - target) < EPS)
            printf("above or equal\n");
        else
            printf("below\n");
    }
    return 0;
}